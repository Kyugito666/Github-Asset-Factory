"""
Asset Generation Prompts (Step 2)
Separated from prompts.py for better modularity
"""

ASSET_PROMPTS = {
    # --- Kategori Generalist & Foundational ---
    "project_starter": """Developer Context (Seed): {base_persona_json}\nTask: 1. Create starter file synced w/ 'tech_stack'. 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "simple-starter", "repo_description": "A basic starter template...", "files": [ {{ "file_name": "starter.ext", "file_content": "..." }}, {{ "file_name": "README.md", "file_content": "# simple-starter\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "fullstack_dev": """Developer Context (Seed): {base_persona_json}\nTask: Fullstack ('tech_stack' has frontend+backend). 1. Choose ONE side (FE or BE). 2. Create ONE small code file for that side. 3. Create repo_name like "fs-demo-[side]". 4. Generate short ENGLISH `repo_description`. 5. Create simple README.md (title + brief ENGLISH desc mentioning fullstack capability).\nGenerate JSON: {{ "repo_name": "fs-demo-...", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# fs-demo-...\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "polymath_dev": """Developer Context (Seed): {base_persona_json}\nTask: Broad skills ('tech_stack' diverse). 1. Choose ONE area from 'tech_stack' (or Python default). 2. Create ONE small code file for that area. 3. Create repo_name like "poly-demo-[area]". 4. Generate short ENGLISH `repo_description`. 5. Create simple README.md (title + brief ENGLISH desc hinting broader skills).\nGenerate JSON: {{ "repo_name": "poly-demo-...", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# poly-demo-...\\n\\nBrief ENGLISH description..." }} ] }}""",

    # --- Kategori Kontribusi & Interaksi ---
    "open_source_advocate": """Developer Context (Seed): {base_persona_json}\nTask: Create ONLY a **profile README.md highlighting open source involvement (content generally in ENGLISH)**. Sections for contributions, etc. Link contributions. No `repo_description`.\nGenerate JSON: {{ "repo_name": "{username_dari_konteks}", "files": [ {{ "file_name": "README.md", "file_content": "OS Advocate ENGLISH README..." }} ] }}""",

    # --- Kategori Spesialis README & Visual ---
    "readme_pro": """Developer Context (Seed): {base_persona_json}\nTask: Create HIGHLY professional project README.md (in ENGLISH) synced w/ 'tech_stack'. 1. Create repo_name. 2. Generate short ENGLISH `repo_description`. 3. Write full README file.\nGenerate JSON: {{ "repo_name": "pro-readme", "repo_description": "Short ENGLISH repo description...", "files": [ {{ "file_name": "README.md", "file_content": "Complete professional ENGLISH README..." }} ] }}""",
    
    "profile_architect": """Developer Context (Seed): {base_persona_json}\nTask: Create ONLY the profile README.md (content generally in ENGLISH). Focus on structure. No `repo_description`.\nGenerate JSON: {{ "repo_name": "{username_dari_konteks}", "files": [ {{ "file_name": "README.md", "file_content": "Profile README content, likely ENGLISH..." }} ] }}""",
    
    "ui_ux_designer": """Developer Context (Seed): {base_persona_json}\nTask: Create ONLY a **visually appealing profile README.md (content generally in ENGLISH)**. Focus on aesthetics, tools (Figma?), projects. Use Markdown creatively. No `repo_description`.\nGenerate JSON: {{ "repo_name": "{username_dari_konteks}", "files": [ {{ "file_name": "README.md", "file_content": "Visually rich ENGLISH README..." }} ] }}""",
    
    "technical_writer_dev": """Developer Context (Seed): {base_persona_json}\nTask: Create ONLY a **clear, well-structured profile README.md (content in ENGLISH)**. Focus on clarity, organization, concise language. No `repo_description`.\nGenerate JSON: {{ "repo_name": "{username_dari_konteks}", "files": [ {{ "file_name": "README.md", "file_content": "Well-written ENGLISH README..." }} ] }}""",
    
    "minimalist_dev": """Developer Context (Seed): {base_persona_json}\nTask: Create ONLY a **clean, simple, minimalist profile README.md (content generally in ENGLISH)**. Focus on whitespace, minimal elements, elegance. No `repo_description`.\nGenerate JSON: {{ "repo_name": "{username_dari_konteks}", "files": [ {{ "file_name": "README.md", "file_content": "Minimalist ENGLISH README..." }} ] }}""",
    
    "data_viz_enthusiast": """Developer Context (Seed): {base_persona_json}\nTask: Create ONLY a **profile README.md incorporating data visualizations (content generally in ENGLISH)**. Embed stats creatively. No `repo_description`.\nGenerate JSON: {{ "repo_name": "{username_dari_konteks}", "files": [ {{ "file_name": "README.md", "file_content": "Data-Viz ENGLISH README..." }} ] }}""",

    # --- Kategori Spesialis Kode & Script Dasar ---
    "uploader": """Developer Context (Seed): {base_persona_json}\nTask: 1. Create utility script synced w/ 'tech_stack'. 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "utils", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# utils\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "backend_dev": """Developer Context (Seed): {base_persona_json}\nTask: 1. Create basic API endpoint file synced w/ 'tech_stack'. 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "api-service", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# api-service\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "frontend_dev": """Developer Context (Seed): {base_persona_json}\nTask: 1. Create basic component file synced w/ 'tech_stack'. 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "ui-kit", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# ui-kit\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "mobile_dev_android": """Developer Context (Seed): {base_persona_json}\nTask: 1. Create Kotlin/XML snippet. 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "android-kit", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# android-kit\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "ai_ml_engineer": """Developer Context (Seed): {base_persona_json}\nTask: 1. Create simple Python ML/data script synced w/ 'tech_stack'. 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "ml-lab", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# ml-lab\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "data_scientist": """Developer Context (Seed): {base_persona_json}\nTask: 1. Create Python data script. 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "data-scripts", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# data-scripts\\n\\nBrief ENGLISH description..." }} ] }}""",

    # --- Kategori Spesialis Infrastruktur & DevOps ---
    "config_master": """Developer Context (Seed): {base_persona_json}\nTask: 1. Create config file synced w/ 'tech_stack'. 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "configs", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# configs\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "dotfiles_enthusiast": """Developer Context (Seed): {base_persona_json}\nTask: 1. Create dotfile synced w/ 'tech_stack'. 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "dotfiles", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# Dotfiles\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "cloud_architect_aws": """Developer Context (Seed): {base_persona_json}\nTask: AWS Cloud Architect. 1. Create simple IaC snippet (Terraform default). 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "aws-iac-examples", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# aws-iac-examples\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "database_admin": """Developer Context (Seed): {base_persona_json}\nTask: DB Admin. 1. Create simple SQL script snippet (PostgreSQL default). 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "db-scripts", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# db-scripts\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "network_engineer": """Developer Context (Seed): {base_persona_json}\nTask: Network Engineer. 1. Create generic config snippet. 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "network-configs", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# network-configs\\n\\nBrief ENGLISH description..." }} ] }}""",

    # --- Kategori Spesialis Kode & Script Lanjutan ---
    "polyglot_tool_builder": """Developer Context (Seed): {base_persona_json}\nTask: 1. Create TWO utility scripts in DIFFERENT languages from 'tech_stack' (or Py/Bash default). 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "poly-tools", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{...}}, {{ "file_name": "README.md", "file_content": "# poly-tools\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "game_developer": """Developer Context (Seed): {base_persona_json}\nTask: Game Dev. 1. Create code snippet (C# default). 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "game-dev-snippets", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# game-dev-snippets\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "embedded_systems_dev": """Developer Context (Seed): {base_persona_json}\nTask: Embedded Dev. 1. Create code snippet (C default). 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "embedded-snippets", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# embedded-snippets\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "framework_maintainer": """Developer Context (Seed): {base_persona_json}\nTask: Framework Maintainer. 1. Create code example for framework internal/contribution. 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "framework-example", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# framework-example\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "performance_optimizer": """Developer Context (Seed): {base_persona_json}\nTask: Performance Optimizer. 1. Create benchmarking script snippet (Python default). 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "perf-benchmarks", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# perf-benchmarks\\n\\nBrief ENGLISH description..." }} ] }}""",
    
    "api_designer": """Developer Context (Seed): {base_persona_json}\nTask: API Designer. 1. Create API definition snippet (OpenAPI default). 2. Create simple README.md (title + brief ENGLISH description). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "api-design", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# api-design\\n\\nBrief ENGLISH description..." }} ] }}""",

    # --- Kategori Lainnya ---
    "security_researcher": """Developer Context (Seed): {base_persona_json}\nTask: 1. Create simple security script synced w/ 'tech_stack'. 2. Create simple README.md (title + brief ENGLISH description + Disclaimer). 3. Generate short ENGLISH `repo_description`.\nGenerate JSON: {{ "repo_name": "sec-lab", "repo_description": "Short ENGLISH repo description...", "files": [ {{...}}, {{ "file_name": "README.md", "file_content": "# sec-lab\\n\\nBrief ENGLISH description...\\n**Disclaimer:** Use responsibly." }} ] }}""",
}
