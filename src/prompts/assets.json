{
  "project_starter": "Developer Context (Seed): {base_persona_json}\nTask: 1. Create starter file synced w/ 'tech_stack'. 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"starter-project\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# starter-project\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "uploader": "Developer Context (Seed): {base_persona_json}\nTask: 1. Create utility script synced w/ 'tech_stack'. 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"utils-collection\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# utils-collection\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "readme_pro": "Developer Context (Seed): {base_persona_json}\nTask: Create HIGHLY professional project README.md (in ENGLISH) synced w/ 'tech_stack'. 1. Create repo_name. 2. Generate **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Write the **full, professional `README.md` file content**.\nGenerate JSON: {{ \"repo_name\": \"pro-readme-example\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{ \"file_name\": \"README.md\", \"file_content\": \"Complete professional ENGLISH README...\" }} ] }}",
  "profile_architect": "Developer Context (Seed): {base_persona_json}\nTask: Create ONLY the profile README.md (content generally in ENGLISH). Focus on structure. No `repo_description`.\nGenerate JSON: {{ \"repo_name\": \"{username_dari_konteks}\", \"files\": [ {{ \"file_name\": \"README.md\", \"file_content\": \"Profile README content, likely ENGLISH...\" }} ] }}",
  "config_master": "Developer Context (Seed): {base_persona_json}\nTask: 1. Create config file synced w/ 'tech_stack'. 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"config-files\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# config-files\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "data_scientist": "Developer Context (Seed): {base_persona_json}\nTask: 1. Create Python data script. 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"data-analysis-scripts\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# data-analysis-scripts\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "dotfiles_enthusiast": "Developer Context (Seed): {base_persona_json}\nTask: 1. Create dotfile synced w/ 'tech_stack'. 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"dotfiles\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# Dotfiles\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "backend_dev": "Developer Context (Seed): {base_persona_json}\nTask: 1. Create basic API endpoint file synced w/ 'tech_stack'. 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"basic-api-service\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# basic-api-service\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "frontend_dev": "Developer Context (Seed): {base_persona_json}\nTask: 1. Create basic component file synced w/ 'tech_stack'. 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"ui-component-library\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# ui-component-library\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "mobile_dev_android": "Developer Context (Seed): {base_persona_json}\nTask: 1. Create Kotlin/XML snippet. 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"android-snippets\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# android-snippets\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "security_researcher": "Developer Context (Seed): {base_persona_json}\nTask: 1. Create simple security script synced w/ 'tech_stack'. 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including title, intro paragraph, and a **Disclaimer** section).\nGenerate JSON: {{ \"repo_name\": \"security-lab\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# security-lab\\n\\nA full introductory paragraph...\\n\\n## Disclaimer\\nThese scripts are for educational purposes only...\" }} ] }}",
  "ai_ml_engineer": "Developer Context (Seed): {base_persona_json}\nTask: 1. Create simple Python ML/data script synced w/ 'tech_stack'. 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"ml-experiments\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# ml-experiments\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "ui_ux_designer": "Developer Context (Seed): {base_persona_json}\nTask: Create ONLY a **visually appealing profile README.md (content generally in ENGLISH)**. Focus on aesthetics, tools (Figma?), projects. Use Markdown creatively. No `repo_description`.\nGenerate JSON: {{ \"repo_name\": \"{username_dari_konteks}\", \"files\": [ {{ \"file_name\": \"README.md\", \"file_content\": \"Visually rich ENGLISH README...\" }} ] }}",
  "polyglot_tool_builder": "Developer Context (Seed): {base_persona_json}\nTask: 1. Create TWO utility scripts in DIFFERENT languages from 'tech_stack'. 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"polyglot-tools\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# polyglot-tools\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "polymath_dev": "Developer Context (Seed): {base_persona_json}\nTask: Broad skills. 1. Choose ONE area from 'tech_stack'. 2. Create ONE small code file for that area. 3. Create repo_name. 4. Generate **concise, one-sentence ENGLISH `repo_description`**. 5. Create simple README.md (title + brief ENGLISH desc hinting broader skills).\nGenerate JSON: {{ \"repo_name\": \"polymath-demo\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# polymath-demo\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "technical_writer_dev": "Developer Context (Seed): {base_persona_json}\nTask: Create ONLY a **clear, well-structured profile README.md (content in ENGLISH)**. Focus on clarity, organization, concise language. No `repo_description`.\nGenerate JSON: {{ \"repo_name\": \"{username_dari_konteks}\", \"files\": [ {{ \"file_name\": \"README.md\", \"file_content\": \"Well-written ENGLISH README...\" }} ] }}",
  "minimalist_dev": "Developer Context (Seed): {base_persona_json}\nTask: Create ONLY a **clean, simple, minimalist profile README.md (content generally in ENGLISH)**. Focus on whitespace, minimal elements, elegance. No `repo_description`.\nGenerate JSON: {{ \"repo_name\": \"{username_dari_konteks}\", \"files\": [ {{ \"file_name\": \"README.md\", \"file_content\": \"Minimalist ENGLISH README...\" }} ] }}",
  "data_viz_enthusiast": "Developer Context (Seed): {base_persona_json}\nTask: Create ONLY a **profile README.md incorporating data visualizations (content generally in ENGLISH)**. Embed stats creatively. No `repo_description`.\nGenerate JSON: {{ \"repo_name\": \"{username_dari_konteks}\", \"files\": [ {{ \"file_name\": \"README.md\", \"file_content\": \"Data-Viz ENGLISH README...\" }} ] }}",
  "open_source_advocate": "Developer Context (Seed): {base_persona_json}\nTask: Create ONLY a **profile README.md highlighting open source involvement (content generally in ENGLISH)**. Sections for contributions, etc. Link contributions. No `repo_description`.\nGenerate JSON: {{ \"repo_name\": \"{username_dari_konteks}\", \"files\": [ {{ \"file_name\": \"README.md\", \"file_content\": \"OS Advocate ENGLISH README...\" }} ] }}",
  "fullstack_dev": "Developer Context (Seed): {base_persona_json}\nTask: Fullstack. 1. Choose ONE side (FE or BE). 2. Create ONE small code file for that side. 3. Create repo_name. 4. Generate **concise, one-sentence ENGLISH `repo_description`**. 5. Create simple README.md (title + brief ENGLISH desc mentioning fullstack capability).\nGenerate JSON: {{ \"repo_name\": \"fullstack-demo\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# fullstack-demo\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "cloud_architect_aws": "Developer Context (Seed): {base_persona_json}\nTask: AWS Cloud Architect. 1. Create simple IaC snippet (Terraform default). 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"aws-iac-templates\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# aws-iac-templates\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "database_admin": "Developer Context (Seed): {base_persona_json}\nTask: DB Admin. 1. Create simple SQL script snippet (PostgreSQL default). 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"database-admin-scripts\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# database-admin-scripts\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "network_engineer": "Developer Context (Seed): {base_persona_json}\nTask: Network Engineer. 1. Create generic config snippet. 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"network-config-examples\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# network-config-examples\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "game_developer": "Developer Context (Seed): {base_persona_json}\nTask: Game Dev. 1. Create code snippet (C# default). 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"game-dev-lab\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# game-dev-lab\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "embedded_systems_dev": "Developer Context (Seed): {base_persona_json}\nTask: Embedded Dev. 1. Create code snippet (C default). 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"embedded-c-snippets\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# embedded-c-snippets\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "framework_maintainer": "Developer Context (Seed): {base_persona_json}\nTask: Framework Maintainer. 1. Create code example for framework internal/contribution. 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"framework-contribution-example\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# framework-contribution-example\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "performance_optimizer": "Developer Context (Seed): {base_persona_json}\nTask: Performance Optimizer. 1. Create benchmarking script snippet (Python default). 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"performance-benchmarks\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# performance-benchmarks\\n\\nA full introductory paragraph about the project...\" }} ] }}",
  "api_designer": "Developer Context (Seed): {base_persona_json}\nTask: API Designer. 1. Create API definition snippet (OpenAPI default). 2. Generate a **concise, one-sentence ENGLISH `repo_description`** (for GitHub UI). 3. Create a **separate, more detailed `README.md`** file (including a title `# repo_name` and an introductory paragraph explaining the project's purpose).\nGenerate JSON: {{ \"repo_name\": \"api-design-patterns\", \"repo_description\": \"A one-sentence repo description...\", \"files\": [ {{...}}, {{ \"file_name\": \"README.md\", \"file_content\": \"# api-design-patterns\\n\\nA full introductory paragraph about the project...\" }} ] }}"
}
